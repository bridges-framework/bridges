#!/usr/local/bin/node
var fs = require('fs');

var program = require('commander');
var Console = require('bridges-console');
var spawn = require('child_process').spawn;

program
  .version('0.1.1')
  .option('-d, --database', 'database')

program
  .command('new <name>')
  .action(function(name) {
    var projectDirectory = process.cwd()+'/'+name;
    console.log('generating bridges app');
    fs.mkdirSync(projectDirectory);
    console.log('mkdir', name);
    fs.mkdirSync(name+'/config');
    console.log('mkdir', name+'/config');
    copy(__dirname+'/src/templates/config/bridges.js', projectDirectory+'/config/bridges.js');
    console.log('create', name+'/config/bridges.js');
    fs.mkdirSync(name+'/config/initializers');
    console.log('mkdir', name+'/config/initializers');
    fs.mkdirSync(projectDirectory+'/app');
    console.log('mkdir', name+'/app');
    fs.mkdirSync(projectDirectory+'/test');
    console.log('mkdir', name+'/test');
    fs.mkdirSync(projectDirectory+'/test/models');
    console.log('mkdir', name+'/test/models');
    fs.mkdirSync(projectDirectory+'/test/integration');
    console.log('mkdir', name+'/test/integration');
    fs.mkdirSync(projectDirectory+'/app/models');
    console.log('mkdir', name+'/app/models');
    fs.mkdirSync(projectDirectory+'/app/controllers');
    console.log('mkdir', name+'/app/controllers');
    fs.mkdirSync(projectDirectory+'/app/lib');
    console.log('mkdir', name+'/app/lib');
    copy(__dirname+'/src/templates/package.json', projectDirectory+'/package.json');
    console.log('create', name+'/package.json');
    copy(__dirname+'/src/templates/.gitignore', projectDirectory+'/.gitignore');
    console.log('create', name+'/.gitignore');

    console.log('Running npm install...');
    setTimeout(function() {
      var install = spawn('npm', ['install'], {
        cwd: projectDirectory
      });

      install.stdout.pipe(process.stdout);
      install.stderr.pipe(process.stdout);

      install.on('close', function(code) {
        console.log('Installation complete');
        process.exit(0);
      });
    }, 1000)
  });

program
  .command('console')
  .action(function() {
    var path = process.cwd()+'/config/bridges.js';
    if (fs.existsSync(path) && fs.statSync(path).isFile()){
      var repl = new Console({
        prompt: 'bridges console',
        loadDirectories: [
          process.cwd()+'/app/models',
          process.cwd()+'/app/lib'
        ]
      }); 
      repl.start();
    } else {
      console.log('current directory is not a Bridges application');
    }
  });

function copy(source, destination) {
  fs.createReadStream(source).pipe(fs.createWriteStream(destination));
}

program.parse(process.argv);

